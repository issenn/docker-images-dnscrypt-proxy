version: "3.9"

name: "dnscrypt-proxy-test"

services:

  server:
    image: localhost:5000/sut
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PACKAGE_NAME: dnscrypt-proxy
        PACKAGE_VERSION: 2.1.2
        PACKAGE_VERSION_PREFIX: ""
        PACKAGE_URL: https://github.com/DNSCrypt/dnscrypt-proxy
        PACKAGE_SOURCE_URL: https://github.com/DNSCrypt/dnscrypt-proxy/archive/2.1.2.tar.gz
        PACKAGE_HEAD_URL: https://github.com/DNSCrypt/dnscrypt-proxy.git
        PACKAGE_HEAD: false
        GO111MODULE: on
        GOPROXY: https://proxy.golang.org,direct,direct
        CGO_ENABLED: 0
        BUILD_FLAGS: "-v"
    command: -config /etc/dnscrypt-proxy/dnscrypt-proxy.toml -loglevel 0

  version:
    image: localhost:5000/sut
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PACKAGE_NAME: dnscrypt-proxy
        PACKAGE_VERSION: 2.1.2
        PACKAGE_VERSION_PREFIX: ""
        PACKAGE_URL: https://github.com/DNSCrypt/dnscrypt-proxy
        PACKAGE_SOURCE_URL: https://github.com/DNSCrypt/dnscrypt-proxy/archive/2.1.2.tar.gz
        PACKAGE_HEAD_URL: https://github.com/DNSCrypt/dnscrypt-proxy.git
        PACKAGE_HEAD: false
        GO111MODULE: on
        GOPROXY: https://proxy.golang.org,direct,direct
        CGO_ENABLED: 0
        BUILD_FLAGS: "-v"
    command: -version

  sut:
    image: alpine:3.17
    depends_on:
      - server
      - version
    entrypoint: ""
    command: >-
      /bin/sh -c '
      apk add --no-cache --update-cache bind-tools &&
      dig @server -p 5053 dnssec.works +dnssec +multi | tee /dev/stderr | grep -wq NOERROR &&
      dig @server -p 5053 fail01.dnssec.works +dnssec +multi | tee /dev/stderr | grep -qE "(SERVFAIL|no servers)" &&
      dig @server -p 5053 fail02.dnssec.works +dnssec +multi | tee /dev/stderr | grep -qE "(SERVFAIL|no servers)" &&
      dig @server -p 5053 fail03.dnssec.works +dnssec +multi | tee /dev/stderr | grep -qE "(SERVFAIL|no servers)" &&
      dig @server -p 5053 fail04.dnssec.works +dnssec +multi | tee /dev/stderr | grep -qE "(SERVFAIL|no servers)"
      '
